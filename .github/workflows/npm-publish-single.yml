# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: npm-publish-single

on:
  workflow_dispatch:
    inputs:
      pkgs:
        description: 'The packages should be publish to npm'
        required: true
        type: choice
        options:
          - '@cqfe/utils'
          - '@cqfe/vue-hooks'
          - '@cqfe/vue-components'
          - '@cqfe/dploy-scp'
          - '@cqfe/generate-api'
          - '@cqfe/eslint-config'
          - '@cqfe/prettier-config'
          - '@cqfe/stylelint-config'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # æˆ– pnpm / yarn
          registry-url: https://registry.npmjs.org/
      - name: Set git identity
        run: |
          git config --global user.name "lllleoli"
          git config --global user.email "leolichuan@qq.com"
      - name: Install dependencies
        run: |
          git checkout --
          npm ci
      - name: Build & Publish
        run: |
          for option in "${{ github.event.inputs.pkgs }}"; do
            if [ "$option" = "@cqfe/utils" ]; then
              echo "publishing @cqfe/utils"
              cd packages/utils
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/generate-api" ]; then
              echo "publishing @cqfe/generate-api"
              cd packages/generate-api
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/deploy-scp" ]; then
              echo "publishing @cqfe/deploy-scp"
              cd packages/deploy-scp
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/eslint-config" ]; then
              echo "publishing @cqfe/eslint-config"
              cd packages/eslint-config
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/prettier-config" ]; then
              echo "publishing @cqfe/prettier-config"
              cd packages/prettier-config
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/stylelint-config" ]; then
              echo "publishing @cqfe/stylelint-config"
              cd packages/stylelint-config
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/vue-hooks" ]; then
              echo "publishing @cqfe/vue-hooks"
              cd packages/vue-hooks
              npm run build
              npm publish --access public
            elif [ "$option" = "@cqfe/vue-components" ]; then
              echo "publishing @cqfe/vue-components"
              cd packages/vue-components
              npm run build
              npm publish --access public
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
